{
	"swagger" : "2.0",
	"info" : {
		"title" : "Jarred's Calculator",
		"description" : "A simple web calculator that logs what it does.",
		"version" : "0.3"
	},
	"basePath" : "/api.php/",
	"schemes" : ["http"],
	"produces" : ["applications/json", "text/html"],
	"paths" : {
		"/accounts" : {
			"post" : {
				"tags" : [],
				"summary" : "Creates a new account from a given username and password, and logs the user in, and then returns a new session token.",
				"operationId" : "post : create-account",
				"produces" : ["text"],
				"parameters" : [
					{	"name" : "account_info",
						"in" : "body",
						"description" : "A JSON-encoded object with the api token and the new account's email address, username and password.",
						"schema" : {
							"type"  :  "string",
							"format"  :  "JSON",
							"example"  :  "{ \"token\" : \"b492cb33-3c82-cfba-f972-06b6884c2b52\", \"email\" : \"foo@example.com\", \"username\" : \"foo\", \"password\" : \"password\"}"
						}
					}
				],
				"responses" : {
					"204" : {
						"description" : "The requested account was successfully created."
					},
					"400" : {
						"description" : "The JSON parameter was incomplete"
					},
					"403" : {
						"description" : "You did not provide a session token."
					},
					"409" : {
						"description" : "An account with that email address already exists"
					}
				}
			}
		},
		"/calculations" : {
			"post" : {
				"tags" : [],
				"summary" : "Lists all calculations that are logged.",
				"description" : "Retrieves the logs for calculations, with optional filtering and sorting, and displays them, formatted as JSON",
				"operationId" : "get-calculations",
				"produces" : ["applications/json"],
				"parameters" : [
					{	"name" : "user",
						"in" : "query",
						"description"  :  "A filter that only looks at data from a specific user. If it is not you, then you probably lack privileges",
						"required"  :  false,
						"type"  :  "string"
					},
					{	"name" : "orderby",
						"in" : "query",
						"description" : "Sorts the data by the given value.",
						"required" : false,
						"type" : "string"
					},
					{	"name" : "sortby",
						"in" : "query",
						"description" : "Sorts the data by the given value. It functions identically to the orderby parameter. If they contradict, behavior is undefined.",
						"required" : false,
						"type" : "string"
					},
					{	"name" : "order",
						"in" : "query",
						"description" : "If orderby or sortby is specified, this may be used to specify which direction to order. It must be either ASC or DESC",
						"required" : false,
						"type" : "string",
						"enum" : ["asc", "desc"]
					},
					{	"name" : "page",
						"in" : "query",
						"description" : "Specifies which page number to retrieve. If not specified or negative, it retrieves all values.",
						"required" : false,
						"type" : "integer",
						"format" : "int32"
					},
					{	"name" : "pagesize",
						"in" : "query",
						"description" : "Specifies the number of entries per page.",
						"required" : false,
						"type" : "integer",
						"format" : "int32",
						"default" : 10
					},
					{	"name" : "auth-json",
						"in" : "body",
						"description" : "A json string that includes the user's auth token under $root_object.token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "json"
						}
					}
				],
				"responses" : {
					"200" : {
						"description" : "Successful, returned the requested JSON"
					},
					"403" : {
						"description" : "Either you have not gotten a session token, or you lack privileges to do what you are trying to do."
					}
				}
			}
		},
		"/calculations/{calculation_number}" : {
			"post" : {
				"tags" : [],
				"summary" : "Responds with info on the given calculation in the log.",
				"operationId" : "get-calculation-calculation_number",
				"produces" : ["applications/json", "text"],
				"parameters" : [
					{	"name" : "calculation_number",
						"in" : "path",
						"description" : "The number of the calculation being returned.",
						"required" : true,
						"type" : "integer"
					},
					{	"name" : "auth-json",
						"in" : "body",
						"description" : "A json string that includes the user's auth token under $root_object.token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "json"
						}
					}
				],
				"responses" : {
					"200" : {
						"description" : "Successfully retrieved the calculation."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					},
					"404" : 	{
						"description" : "The requested calculation number could not be found."
					}
				}
			}
		},
		"/calculate/{operation}/{firstNumber}/{secondNumber}" : {
			"post" : {
				"tags" : [],
				"summary" : "Performs the given calculation and gives the result.",
				"operationId" : "calculate-binary_operator",
				"produces" : ["text", "applications/json"],
				"parameters" : [
					{	"name" : "operation",
						"in" : "path",
						"description" : "The name of the operation to execute",
						"required" : true,
						"type" : "string"
					},
					{	"name" : "firstNumber",
						"in" : "path",
						"description" : "The first number on which to operate.",
						"required" : true,
						"type" : "number",
						"format" : "double"
					},
					{	"name" : "secondNumber",
						"in" : "path",
						"description" : "The second number on which to operate. This is ignored if the operation is unary.",
						"required" : true,
						"type" : "number",
						"format" : "double"
					},
					{	"name" : "auth-json",
						"in" : "body",
						"description" : "A json string that includes the user's auth token under $root_object.token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "json"
						}
					}
				],
				"responses" : {
					"200" : {
						"description" : "Successful, returned the requested operation and the result, formatted in a more user-friendly way (i.e. Add/1/2 becomes 1+2=3)"
					},
					"400" : {
						"description" : "The operation requires three or more operators."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					},
					"404" : {
						"description" : "The operation is not recognized."
					}
				}
			}
		},
		"/calculate/{operation}/{number}" : {
			"post" : {
				"tags" : [],
				"summary" : "Performs the given calculation and gives the result.",
				"operationId" : "calculate-unary_operator",
				"produces" : ["text", "applications/json"],
				"parameters" : [
					{	"name" : "operation",
						"in" : "path",
						"description" : "The name of the operation to execute",
						"required" : true,
						"type" : "string"
					},
					{	"name" : "number",
						"in" : "path",
						"description" : "The number on which to apply the unary operator.",
						"required" : true,
						"type" : "number",
						"format" : "double"
					},
					{	"name" : "auth-json",
						"in" : "body",
						"description" : "A json string that includes the user's auth token under $root_object.token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "json"
						}
					}
				],
				"responses" : {
					"200" : {
						"description" : "Successful, returned the requested operation and the result, formatted in a more user-friendly way (i.e. Add/1/2 becomes 1+2=3)"
					},
					"400" : {
						"description" : "The operation requires two or more operators."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					},
					"404" : {
						"description" : "The operation is not recognized."
					}
				}
			}
		},
		"/calculate/operations" : {
			"post" : {
				"tags" : [],
				"summary" : "Returns a list of the operations and some info about them.",
				"operationId" : "get-calculate-list",
				"produces" : ["applications/json"],
				"parameters" : [
					{	"name" : "auth-json",
						"in" : "body",
						"description" : "A json string that includes the user's auth token under $root_object.token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "json"
						}
					}
				],
				"responses" : {
					"200" : {
						"description" : "The requested list has been returned."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					}
				}
			}
		},
		"/calculate/operations/{operationName}" : {
			"post" : {
				"tags" : [],
				"summary" : "Returns a list of the operations and some info about them.",
				"operationId" : "get-calculate-specific_operation",
				"produces" : ["applications/json"],
				"parameters" : [
					{	"name" : "operationName",
						"in" : "path",
						"description" : "The specific operation to return info about.",
						"required" : true,
						"type" : "string"
					},
					{	"name" : "auth-json",
						"in" : "body",
						"description" : "A json string that includes the user's auth token under $root_object.token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "json"
						}
					}
				],
				"responses" : {
					"200" : {
						"description" : "The requested list has been returned."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					}
				}
			}
		},
		"/change_password" : {
			"post" : {
				"tags" : [],
				"summary" : "If the user gives the correct password for their account, then the user may change their password.",
				"operationId" : "change-password",
				"produces" : ["text"],
				"parameters" : [
					{	"name" : "credentials",
						"in" : "body",
						"description" : "A JSON-encoded object with the old password, the new password, and optionally, force_logout may be specified to force all other sessions to log out.",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "JSON",
							"example" : "{ \"token\" : \"b492cb33-3c82-cfba-f972-06b6884c2b52\", \"old_password\" : \"password\", \"new_password\" : \"password123\", \"force_logout\" : 44360817475 }",
							"x-example-notes" : "That last variable force_logout does not need to be specified, and its value doesn't matter"
						}
					}
				],
				"responses" : {
					"204" : {
						"description" : "The request was successfully fulfilled."
					},
					"400" : {
						"description" : "The current password supplied was incorrect."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					},
					"409" : {
						"description" : "You are currently not logged in."
					}
				}
			}
		},
		"/login" : {
			"post" : {
				"tags" : [],
				"summary" : "Logs the user into their account given the password and either the userid or the email, and then replaces the token.",
				"operationId" : "login",
				"produces" : ["text"],
				"parameters" : [
					{	"name" : "credentials",
						"in" : "body",
						"description" : "A JSON-encoded object with login credentials (email or userid, as well as password) and api token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "JSON",
							"example" : "{ \"token\" : \"b492cb33-3c82-cfba-f972-06b6884c2b52\", \"userid\" : 4, \"password\" : \"password\"}"
						}
					}
				],
				"responses" : {
					"204" : {
						"description" : "The user has successfully logged in. The response contains a new token which should be used instead of the old one."
					},
					"400" : {
						"description" : "The credentials were either not supplied or invalid. The response will specify which one."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					}
				}
			}
		},
		"/logout" : {
			"post" : {
				"tags" : [],
				"summary" : "Logs the user out of their account and replaces their token.",
				"operationId" : "logout",
				"produces" : ["text"],
				"parameters" : [
					{	"name" : "credentials",
						"in" : "body",
						"description" : "A JSON-encoded object with login credentials (email or userid, as well as password and api token)",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "JSON"
						}
					}
				],
				"responses" : {
					"204" : {
						"description" : "The user has successfully logged out. The response contains a new token which should be used instead of the old one."
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					},
					"409" : {
						"description" : "You are not logged in, so you can't log out."
					}
				}
			}
		},
		"/token" : {
			"post" : {
				"tags" : [],
				"summary" : "Assigns the user a session token, puts it in the session data, and returns it to the user. This token must be used for the rest of the api.",
				"operationId" : "get-token",
				"produces" : ["applications/json"],
				"parameters" : [],
				"responses" : {
					"200" : {
						"description" : "The user's token has been successfully generated and returned."
					}
				}
			}
		},
		"/userid" : {
			"post" : {
				"tags" : [],
				"summary" : "Responds with the user's userid, if logged in, or the user's ip address, if not.",
				"operationId" : "get-userid",
				"produces" : ["text"],
				"parameters" : [
					{	"name" : "auth-json",
						"in" : "body",
						"description" : "A json string that includes the user's auth token under $root_object.token",
						"required" : true,
						"schema" : {
							"type" : "string",
							"format" : "json"
						}
					}
				],
				"responses" : {
					"200" : {
						"description" : "Successful, returned the user's id"
					},
					"403" : {
						"description" : "You have not gotten a session token. Please GET /api.php/token to get one."
					}
				}
			}
		}
	}
}